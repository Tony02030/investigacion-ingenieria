scalar Date

type Query {
    clients: [Client],
    clientById(id: ID!): Client
}

type Mutation {
    addClient(clientInput: ClientInput): Client
}

type Client{
     name: String!,
     address: String!,
     phone: String,
     email: String!,
     birthDate: Date
}

type AccountType{
    id: ID!,
    name: String!
}

type Account{
    accountNumber: String,
    client: Client,
    balance: Float,
    accountType: AccountType
}

type Transaction {
    id: ID!,
    sourceAccount: Account,
    destinationAccount: Account,
    dateTime: Date,
    amount: Float
}

type Loan{
    id: ID,
    client: Client,
    amount: Float,
    interestRate: Float,
    termMonths: Int
}

input ClientInput {
    name: String!
    address: String!
    phone: String
    email: String!
    birthDate: Date
}