scalar Date

type Query {
    clients: [Client],
    accountType : [Account],
    account : [Account],
    transaction: [Transaction],
    loan: [Loan]
}

type Mutation {
    addClient(client: ClientInput!): Client
}

type Client{
     id: ID
     name: String,
     address: String,
     phone: String,
     email: String,
     birthDate: Date
}

type AccountType{
    id: ID,
    name: String
}

type Account{
    accountNumber: String,
    client: Client,
    balance: Float,
    accountType: AccountType
}

type Transaction {
    id: ID,
    sourceAccount: Account,
    destinationAccount: Account,
    dateTime: Date,
    amount: Float
}

type Loan{
    id: ID,
    client: Client,
    amount: Float,
    interestRate: Float,
    termMonths: Int
}

input ClientInput {
    name: String
    address: String
    phone: String
    email: String
    birthDate: Date
}